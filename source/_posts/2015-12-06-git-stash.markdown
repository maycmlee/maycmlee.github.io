---
layout: post
title: "Git Stash"
date: 2015-12-06 11:23:00 -0500
comments: true
categories: 
---

We started our second project mode last week and I'd like to talk about <b>git stash</b>, which I've found really helpful for when I need to put something I'm working on on hold to work on something else.

So, for example, say I'm trying to write a new feature, but was asked to fix a bug in another part of the code.  

If I did ```git status```

I get...

```
On branch new_feature
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

  modified:   app/models/country.rb

no changes added to commit (use "git add" and/or "git commit -a")
```

I don't really want to commit my test code yet because it's only half done. So, instead, I can take a snapshot of my current work using ```git stash```.


By doing ```git stash``` you save your work on your local directory and clear out your working directory.

After fixing the bug, to get back the work I was doing before I just have to use ```git pop```, which gives me the most recent work I have stashed.

To stash with a message you can do... 

```git stash save "This is a test"```

You can also stash more than one work-in-progress.  And to get a list of all of your stashes you can use ```git stash list```, which gives you...


stash@{0}: WIP on new-feature: 5cedcc This is a test<br>
stash@{1}: WIP on new-feature: 9f4434 Try different method<br>
stash@{2}: WIP on new-feature: 5acd291 Start new feature<br>

<b>git pop</b> only gives you the most recent stash so if you wanted to get <b>stash@{1}</b> you would do <b>git stash apply stash@{1}</b>

This has been really helpful when I'm trying to solve a problem but want to try different methods. So I can try one method, stash it and try another method and then use the one I want.